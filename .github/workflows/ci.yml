name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [aarch64-unknown-linux-gnu]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static binfmt-support gcc-aarch64-linux-gnu lcov

      - name: Install Rust tools
        run: |
          rustup component add llvm-tools-preview
          rustup component add rustfmt
          rustup component add clippy

      - name: Install prebuilt tools
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest@0.9.104,grcov@0.8.18

      - name: Cache Rust build artifacts
        uses: Swatinem/rust-cache@v2
        with:
          cache-all-crates: true

      - name: Format check
        run: cargo fmt --all -- --check

      - name: Clippy check
        run: cargo clippy --all-targets -- -D warnings

      - name: Unit/Integration tests (host)
        run: cargo nextest run --all

      - name: Build for target
        run: cargo build --target ${{ matrix.target }} --release

      - name: Emulated healthcheck
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          export TARGET=${{ matrix.target }}
          export MODE=release
          ./scripts/run-emu.sh

      - name: Coverage analysis (host only)
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          LLVM_PROFILE_FILE="cov-%p-%m.profraw" RUSTFLAGS="-Zinstrument-coverage" cargo test
          grcov . -s . -t lcov --binary-path target -o lcov.info --ignore "/*" --ignore "target/*"
          genhtml -o coverage lcov.info || echo "genhtml failed"

      - name: Enforce coverage threshold
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          if [ -f lcov.info ]; then
            lines=$(lcov --summary lcov.info 2>/dev/null | grep "lines" | awk '{print $2}' | sed 's/%//' || echo "0")
            echo "Coverage: ${lines}%"
            if [ $(echo "$lines >= 75" | bc -l 2>/dev/null || echo "0") -eq 1 ]; then
              echo "Coverage threshold met: ${lines}% >= 75%"
            else
              echo "Coverage threshold not met: ${lines}% < 75%"
              exit 1
            fi
          else
            echo "No coverage data found, skipping threshold check"
          fi

      - name: Upload coverage reports
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: |
            lcov.info
            coverage/
        continue-on-error: true