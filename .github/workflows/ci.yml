name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

# Prevent concurrent runs on the same branch
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: read

jobs:
  build_and_test:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Cargo caching
      - name: Cache cargo registry and target
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-${{ runner.os }}-

      - name: Install Rust toolchain
        run: |
          rustup toolchain install stable
          rustup toolchain install nightly --component llvm-tools-preview || true
          rustup target add aarch64-unknown-linux-gnu

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            gcc-aarch64-linux-gnu \
            libc6-dev-arm64-cross \
            qemu-user \
            qemu-user-static

      - name: Format and lint checks
        run: make check

      - name: Run tests
        run: make test

      - name: Build ARM targets
        run: make build-arm

      - name: Run emulated healthcheck
        run: TARGET=aarch64-unknown-linux-gnu MODE=release ./scripts/run-emu.sh

  # Coverage job runs separately after build_and_test completes
  # Uses nightly toolchain for LLVM instrumentation
  coverage:
    runs-on: ubuntu-24.04
    needs: [build_and_test]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Cargo caching (same as build_and_test job)
      - name: Cache cargo registry and target
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-${{ runner.os }}-

      # Install toolchains - nightly only used here for instrumentation
      - name: Install Rust toolchains
        run: |
          rustup toolchain install stable
          rustup toolchain install nightly --component llvm-tools-preview || true

      # Install coverage tooling
      - name: Install coverage dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends lcov
          cargo install cargo-llvm-cov || true

      # Run coverage analysis via Makefile
      # Adjust --fail-under-lines threshold in Makefile cov target if desired
      - name: Generate coverage report
        run: make cov

      # Upload lcov.info if it exists
      - name: Upload LCOV coverage report
        uses: actions/upload-artifact@v4
        if: always() && hashFiles('lcov.info') != ''
        with:
          name: coverage-lcov
          path: lcov.info
          retention-days: 30

      # Upload HTML coverage report if it exists
      - name: Upload HTML coverage report
        uses: actions/upload-artifact@v4
        if: always() && hashFiles('coverage/index.html') != ''
        with:
          name: coverage-html
          path: coverage/
          retention-days: 30